

メモリ（ＲＡＭ）
────────────

		内容				セグメント名
	________________________________
0000h	|
	|	(1) Zeropage			（以下表参照）
	|_______________________________
0100h	|	(2) Stack			Stack
	|_______________________________
0180h	|
	|
	|	(3) SYSTEM & Sound work		BSS
	|_______________________________
0300h	|
	|	(4) Sprite DMA Buffer		Sprite
	|_______________________________
0400h	|
	|
	|
0500h	|
	|
	|	(5) USER Area			─
0600h	|
	|
	|
0700h	|
	|
07FFh	|______________________________



(1) Zeropage
	(6)〜(9)を参照。

(2) Stack
	ＣＰＵのスタックエリアです。256[Byte]あります。

(3) SYSTEM & Sound work
	本システムでは、システムとサウンド用のワークエリアです。
	ユーザーがアクセスする必要はありません。

(4) Sprite DMA Buffer
	本システムでは、スプライトＤＭＡ用のバッファに使います。
	スプライトＤＭＡを使用する際は、この領域を活用してください。

(5) USER Area
	ユーザーが自由に使用してよいＲＡＭエリアです。
	場面に応じて用途を変更しながら使う事をお勧めします。

	例えば、TITLE, STAGEなど、複数のセグメントを用意し、
	そのセグメントに同じアドレスを割り当てておきます。

	タイトル画面時は、ステージプレイ時の変数が必要なく、
	また、ステージプレイ時は、タイトル画面時の変数が必要ない
	場合、このように、使用ＲＡＭエリアを節約できます。



メモリ（Zeropage）
────────────

		内容				セグメント名
	________________________________
00h	|
	|	(6) General work		Zeropage
	|	    System & Bank & Key system
	|
	|	(7) Sound control system
	|	     (nsd.lib)			Zeropage
	|
	|_______________________________
60h	|
	|
	|
	|	(8) Graphics
80h	|	     contorl system		PPUDRV_ZP
	|
	|
	|
A0h	|_______________________________
	|
	|
	|
C0h	|	(9) USER Work Area
	|
	|
	|
E0h	|
	|
	|
FFh	|_______________________________



(6) General work
	詳細は、システム・ワークを参照ねがいます。


(7) Sound control system
	サウンドドライバーの制御用エリアです。
	基本的には、ユーザーからのアクセスは必要ありませんが、
	内部パラメータを変えて、強引にテンポアップなどは可能です。


(8) Graphics contorl system
	絵画システムに用いるエリアです。
	デフォルトの絵画システム`nmi_ppu_ctrl()関数'のワークはこの領域に
	配置されますが、ユーザー独自の絵画システムを用いる場合も、
	セグメントをこのメモリ空間に割り当てて、使用して構いません。


(9) USER Work Area
	ユーザーが自由に使用してよいＲＡＭエリアです。
	場面に応じて用途を変更しながら使う事をお勧めします。

	例えば、TITLE_ZP, STAGE_ZP など、複数のセグメントを用意し、
	そのセグメントに同じアドレスを割り当てておきます。





●システム・ワーク
────────────

;-----------------------------------------------------------------------
;汎用レジスタ

メインの汎用変数です。
本システムでの多くの関数は、引数としてこの領域を使います。
ＮＭＩ割り込み、ＩＲＱ割り込みルーチンでは使えません。

__r0	
__r1	
__r2	
__r3	
__r4	
__r5	
__r6	
__r7	

;-----------------------------------------------------------------------
;汎用レジスタ（NMI割り込み用）

ＮＭＩ割り込み時の汎用変数です。
ユーザ独自のＮＭＩ絵画システムを作る場合、ここを汎用変数として使ってください。

__n0	
__n1	
__n2	
__n3	

;-----------------------------------------------------------------------
;汎用レジスタ（IRQ割り込み用）

ＩＲＱ割り込み時の汎用変数です。
ユーザ独自のＩＲＱ絵画システムを作る場合、ここを汎用変数として使ってください。

__i0	
__i1	
__i2	
__i3	

;-----------------------------------------------------------------------
;ＰＰＵ関連

ＰＰＵの2000h、2001は、このワークを経由して設定してください。
次のNMI割り込みで、設定されます。
これは、画面絵画システムで変更した値を、元に戻すためです。

__Flag_2000	次のNMI割り込みで、2000h (PPUのCTRL1) をこの値に設定します。
__Flag_2001	次のNMI割り込みで、2000h (PPUのCTRL1) をこの値に設定します。

;-----------------------------------------------------------------------
;時間関連

起動時からの時間は、これらのワークを読み込んで下さい。
フレーム毎に更新されます。
又、値をセットする場合は、範囲内の数値をセットしてください。

__cc		NMI割り込み毎にカウントアップします。59の次は0になります。
__ss		1秒毎にBCDでカウントアップします。00h〜59hの値になります。
__mm		1分毎にBCDでカウントアップします。00h〜59hの値になります。
__hh		1時間毎にカウントアップします。0〜255(0FFh)の値になります。

;-----------------------------------------------------------------------
;キー関連

キーの入力は、これらのワークを読み込んで下さい。
フレーム毎に更新されます。

__PAD0		今回のフレームの、PAD0の入力です。
__PAD1		今回のフレームの、PAD01の入力です。
__PAD0_OLD	前回のフレームの、PAD0の入力です。
__PAD1_OLD	前回のフレームの、PAD1の入力です。
__PAD0_REL	今回のフレームで、新たに離されたPAD0のボタンです。
__PAD1_REL	今回のフレームで、新たに離されたPAD1のボタンです。
__PAD0_TRG	今回のフレームで、新たに押されたPAD0のボタンです。
__PAD1_TRG	今回のフレームで、新たに押されたPAD1のボタンです。

;-----------------------------------------------------------------------
;マッパー関連

ＣＨＲバンクは、このワークを介して設定してください。
次のNMI割り込みで、設定されます。

ＰＲＧバンクは、■■■■()関数にて設定する事で、
このワークに登録すると同時にバンク切替も行います。

※ＮＭＩ割り込みでは、ＰＲＧバンクを変更し、
　終了時にここに登録されたバンクに戻す処理を行います。
　そのため、この関数にてバンク切替しないと、暴走します。

__MMC3_Cbank0	
__MMC3_Cbank1	
__MMC3_Cbank2	
__MMC3_Cbank3	
__MMC3_Cbank4	
__MMC3_Cbank5	
__MMC3_Pbank0	
__MMC3_Pbank1	


